# 주식 자동매매 시스템 상세 프로젝트 계획 (모의투자 단계)

## Phase 1: 핵심 매매 로직 구현 및 고도화 (Python)

### 1.1. 데이터 핸들러 및 기술적 지표 라이브러리 구축
- [ ] **데이터 수집 모듈 확장**: `pyheroapi`를 사용하여 특정 종목의 일봉/분봉 데이터를 안정적으로 가져와 `pandas` 데이터프레임으로 변환하는 기능 구현.
- [ ] **기술적 분석 라이브러리 도입**: `pandas-ta` 라이브러리를 프로젝트에 통합하여 이동평균, RSI, MACD, 볼린저 밴드 등 핵심 지표를 쉽게 계산할 수 있는 기반 마련.

### 1.2. 기존 매매 전략 구체화 (`GEMINI.md` 기반)
- [ ] **(전략 1) 급등주 검색 및 필터링 모듈 (09:00 ~ 09:20 집중)**
    - 전일 거래량 대비 당일 거래량 급증 (예: 500% 이상) 종목 실시간 포착.
    - 포착된 종목의 분봉 차트를 분석하여 단기 급등 패턴 확인.
- [ ] **(전략 2) 안정성 기반 스윙 트레이딩 필터링 모듈**
    - 5일 또는 10일 이동평균선 위에 주가가 4거래일 이상 안정적으로 머무는 종목을 필터링하는 로직 구현.
- [ ] **(전략 3) 호가창 기반 단타 매매 로직 구현**
    - 실시간 호가창 데이터를 수신.
    - `GEMINI.md`에 명시된 매도/매수 물량 비율(예: 특정 틱의 매도 물량 합이 매수 물량 합의 2배 이상)을 분석하여 순간적인 매수/매도 시점을 포착하는 로직 개발.

### 1.3. 신규 매매 모델 도입 (리서치 기반)
- [ ] **(모델 1) RSI를 활용한 과매수/과매도 전략**
    - RSI 지표가 30 미만으로 떨어질 때 '과매도' 상태로 판단하여 매수 후보로 고려.
    - RSI 지표가 70을 초과할 때 '과매수' 상태로 판단하여 매도 또는 비중 축소 신호로 활용.
- [ ] **(모델 2) MACD를 활용한 추세 추종 전략**
    - MACD선이 시그널선을 상향 돌파(골든 크로스)할 때를 매수 신호로, 하향 돌파(데드 크로스)할 때를 매도 신호로 활용.
    - 추세의 강도와 방향을 판단하는 데 사용.
- [ ] **(모델 3) 볼린저 밴드 활용 변동성 돌파 전략**
    - 주가가 볼린저 밴드 하단을 터치하거나 하향 돌파 후 다시 밴드 안으로 회귀할 때 매수.
    - 주가가 상단을 강하게 돌파할 때를 추세 지속의 신호로 활용.

## Phase 2: 매매 실행 및 시스템 통합

### 2.1. 주문 실행 및 계좌 관리 모듈
- [ ] **매수/매도 주문 실행 모듈**: 계산된 매매 신호에 따라 `pyheroapi`를 통해 실제 모의투자 계좌에 지정가/시장가 주문을 넣는 기능 구현.
- [ ] **자금 관리 로직**: 총 투자금(1,000,000원) 및 종목당 최대 매수 금액(100,000원)을 넘지 않도록 제어하는 기능 구현.
- [ ] **포트폴리오 관리**: 현재 보유 종목, 평단가, 수익률 등을 실시간으로 추적하고 관리하는 기능 구현.

### 2.2. 리스크 관리 모듈
- [ ] **손절매(Stop-Loss) 로직**: 매수 가격 대비 -2% 하락 시 자동으로 매도 주문을 실행.
- [ ] **익절(Trailing-Stop) 로직**: 매수 후 +3% 이상 상승했다가, 고점 대비 -2% 하락 시 자동으로 매도하여 수익을 확보하는 기능 구현.

### 2.3. 백테스팅(Backtesting) 환경 구축
- [ ] **과거 데이터 기반 전략 시뮬레이터 개발**: 구현된 매매 전략들이 과거 데이터에서 어떤 성과를 보였는지 테스트하고, 파라미터(예: 이동평균 기간, RSI 기준값 등)를 최적화하는 환경 구축.

## Phase 3: 모니터링 및 제어 시스템 고도화 (Web UI)

### 3.1. 자동매매 제어 기능 강화
- [ ] **전략 선택 기능**: 웹 UI에서 사용할 매매 전략(예: 급등주 전략, RSI 전략)을 선택하거나 조합하여 실행할 수 있는 기능 추가.
- [ ] **실시간 로그 표시**: 자동매매 시스템의 모든 동작(종목 포착, 매수/매도 신호, 주문 실행 등)을 웹 화면에서 실시간으로 확인할 수 있는 로그 뷰어 구현.

### 3.2. 데이터 시각화 개선
- [ ] **매매 내역 시각화**: 체결된 거래 내역을 차트 위에 표시하여 매수/매도 시점을 직관적으로 파악할 수 있도록 개선.
- [ ] **수익률 분석 대시보드**: 일별/주별/월별 수익률, 승률 등 성과를 분석하고 시각화하는 페이지 추가.

---
이 계획은 시스템의 안정성과 수익성을 검증하며 점진적으로 발전시키는 것을 목표로 합니다.
