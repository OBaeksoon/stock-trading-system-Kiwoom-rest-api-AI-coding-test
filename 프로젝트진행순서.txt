# 주식 자동매매 시스템 프로젝트 진행 순서

1.  **환경 설정 (완료)**:
    *   Python, PHP, MySQL 개발 환경 구축
    *   필요한 Python 라이브러리 설치 (`requests`, `yfinance`, `mysql-connector-python`)
    *   `config.ini`에 DB 접속 정보 설정
    *   MySQL `stock` 데이터베이스 및 `settings` 테이블 생성

2.  **API 연동 모듈 개발 (기본 기능 완료)**:
    *   `pyheroapi` 라이브러리를 활용하여 키움증권 REST API 연동을 진행합니다.
    *   `kiwoom_api.py` 모듈 생성
    *   DB에서 API 설정(APP_KEY, APP_SECRET)을 읽어오는 기능 구현
    *   키움증권 REST API를 이용한 접근 토큰 발급 기능 구현 (완료)
    *   계좌 정보 조회 기능 구현 (완료)
    *   주문 및 시세 조회 기능 모듈화 (완료)

3.  **데이터 수집 및 분석 모듈 개발**:
    *   미국 주식 상승률 웹 스크래핑/API 연동 및 테마/뉴스 검색
    *   국내 주식 관심종목 데이터 연동 및 테마/뉴스 검색
    *   코스피/코스닥 전종목 DB 저장 및 웹 표시 기능 구현 (완료)
    *   일봉/분봉 차트 데이터 수집 및 가공

4.  **매매 전략 로직 구현**:
    *   급등주 검색 로직 구현
    *   5일/10일 이동평균선 이탈 여부 확인 로직 구현
    *   매도 물량 기반 매매 로직 구현
    *   손절/익절 로직 구현

5.  **웹 인터페이스 기본 구조 개발 (PHP)**:
    *   자동매매 제어 기능 (시작/일시정지/중지) 구현
    *   데이터를 표시할 기본 웹 페이지 레이아웃 구성

6.  **데이터 연동 및 실시간 갱신**:
    *   Python 로직에서 처리된 데이터를 PHP 웹으로 전달 및 표시
    *   웹 페이지 자동 갱신 기능 구현

7.  **UI/UX 개선 및 추가 기능 구현**:
    *   차트 시각화 (일봉/분봉 차트)
    *   미국/국내 주식 정보 표시 UI 개선
    *   매매 현황 상세 표시
    *   손실 설정 기능 UI 구현

8.  **테스트 및 디버깅**:
    *   모의 투자를 통한 시스템 전체 테스트 및 버그 수정

9.  **문서화**:
    *   사용 설명서, 로드맵 등 문서 작성 및 업데이트